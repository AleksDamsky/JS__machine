Прежде чем писать код для работы приложения, необходимо сначала создать структуру, которая могла бы нам позволить на нее опираться. Для этог придуман псевдокод. Это такой связующий элемент, объединяющий человеческий язык и код.

пример: 

1) Объявить переменную, которая будет содержать в себе информацию о нахождении корабля (то есть, в каких точках он будет находиться);

2) Объявить перменную, содержащую информацию о количестве выстрелов(попыток);

3) Объявить переменную, содержащую информацию о количестве попаданий в корабль;

4) Объявить переменную, содержащую информацию про текущий выстрел (то есть, номер выстрела);

5) Объявить переменную, содержащую информацию о том, потоплен корабль или нет;

let isSunk = false;   //Переменная, которая содержит в себе булево значение. потоплен или нет
У железа есть список переменных, в которых хранятся данные, указывающие на точки, где расположен корабль.


**const location1 = 3; const location2 = 4; const location3 = 5; //Переменные с точками, в которых находится корабль

Начало
|              
|
Начало цикла
|
|
Запрос числа от пользователя
|
|
Проверка данных от пользователя с данными в перменных
|
|
Если:
|
|
Попал, то: || Не попал, то:
|
|
1) Вывести на экран сообщение о попадании. 2) Занести в переменную информацию о текущем выстреле(какой это был ход, какая это была попытка)

||

1) Вывести на экран сообщение о не попадании. 2) Занести в переменную информацию о текущем выстреле(какой это был ход, какая это была попытка)
|
|
Если попал, то:
|
|
Запросить данные от пользователя еще раз и вернуться к проверке данных;
|
|
выполняться данное условие будет 3 раза, пока пользователь не затопит весь корабль в трех точках
Если (пользователь попал 3 раза), то: 1) поменять false на true  в переменной  isSunk; 2) Вывести сообщение на экран "Корабль потоплен"
|
|
Конец цикла